@use "../foundations/_hamburger.scss";

body {
  min-height: 100vh;
  background-color: #ffffff;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

@mixin line-props {
  width: 100%;
  height: var(--hamburger-height);
  background-color: var(--hamburger-line-color); 
  border-radius: var(--hamburger-border-radius);
  position: absolute;
  transition-property: transform, opacity;
  transition-timing-function: ease;
  transition-duration: var(--hamburger-transition-time);
}

.hamburger {
  padding: var(--hamburger-padding);
  cursor: pointer;
  display: inline-block;
  overflow: hidden;
  background-color: var(--hamburger-bg-color);

  &__container {
    width: var(--hamburger-width);
    height: var(--hamburger-height);
    position: relative;
  }

  &:hover  &__inner {
    transform: translate(-(var(--hamburger-hide-distance)), 50%);
    opacity: var(--hamburger-transition-opacity);
  }

  &:hover &__inner::before,
  &:hover &__inner::after {
    transform: translate(calc(2 * var(--hamburger-hide-distance)), 0);
    opacity: var(--hamburger-transition-opacity);
  }

  &.is-active &__inner {
    display: none;
  }

  &__inner {
    @include line-props();
    top: 50%;
    transform: translate(var(--hamburger-initial-opposition), -50%);
    opacity: 1;


    &::before,
    &::after {
      @include line-props();

      content: "";
      opacity: 1;
      transform: translate(var(--hamburger-initial-opposition), 0);
    }

    &::before {
      top: -(var(--hambuger-vertical-gap));
    }

    &::after {
      top: var(--hambuger-vertical-gap);
    }
  }

  &:hover  &__hidden {
    opacity: 1;
    transform: translate(0, -50%);
  }

  &:hover &__hidden::before,
  &:hover &__hidden::after {
    opacity: 1;
    transform: translate(0, 0);
  }

  &.is-active &__hidden {
    opacity: 1;
    transform: rotate(45deg);
  }

  &.is-active &__hidden::before {
    transform: translate(0, var(--hambuger-vertical-gap)) rotate(90deg);
    transform-origin: center;
  }

  &.is-active &__hidden::after {
    transform-origin: center;
    transform: translate(0, -(var(--hambuger-vertical-gap))) rotate(0);
  }

  &__hidden {
    opacity: 0;
    @include line-props();
    
    background-color: var(hamburger-hover-line-color);
    top: 50%;
    transform: translate(var(--hamburger-hide-distance), -50%);
    

    &::before,
    &::after {
      @include line-props();
      background-color: var(hamburger-hover-line-color);

      content: "";
      transform: translate(calc(2 * var(--hamburger-hide-distance)), 0);
    }

    &::before {
      top: -(var(--hamburger-vertical-gap));
    }

    &::after {
      top: var(--hambuger-vertical-gap);
    }
  }

}

